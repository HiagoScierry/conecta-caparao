generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum DiaSemana {
  SEGUNDA
  TERCA
  QUARTA
  QUINTA
  SEXTA
  SABADO
  DOMINGO
}

model Contato {
  id        Int     @id @default(autoincrement())
  telefone  String
  celular   String
  email     String
  whatsapp  String
  instagram String

  municipios         Municipio[]
  atracoesTuristicas AtracaoTuristica[]
  servicosTuristicos ServicoTuristico[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Foto {
  id        Int      @id @default(autoincrement())
  url       String

  galeria   GaleriaFoto? // AGORA: Singular e opcional

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model GaleriaFoto {
  id Int @id @default(autoincrement())

  idFoto Int  @unique
  foto   Foto @relation(fields: [idFoto], references: [id])
  capa   Boolean @default(false)

  municipioId        Int?
  atracaoTuristicaId Int?
  eventoId           Int?
  noticiaId          Int?
  servicoTuristicoId Int?

  municipio        Municipio?        @relation(fields: [municipioId], references: [id])
  atracaoTuristica AtracaoTuristica? @relation(fields: [atracaoTuristicaId], references: [id])
  evento           Evento?           @relation(fields: [eventoId], references: [id])
  noticia          Noticia?          @relation(fields: [noticiaId], references: [id])
  servicoTuristico ServicoTuristico? @relation(fields: [servicoTuristicoId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}


model Municipio {
  id        Int      @id @default(autoincrement())
  nome      String
  descricao String?a
  site      String?
  mapaUrl String @db.VarChar(2048)

  idContato Int

  fotos GaleriaFoto[]

  atracoesTuristicas AtracaoTuristica[]
  eventos            Evento[]
  servicosTuristicos ServicoTuristico[]

  contato Contato @relation(fields: [idContato], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model HorarioDeFuncionamento {
  id                 Int      @id @default(autoincrement())
  dia                DiaSemana
  horario            String

  atracaoTuristicaId Int?
  servicoTuristicoId Int?

  atracaoTuristica AtracaoTuristica? @relation(fields: [atracaoTuristicaId], references: [id])
  servicoTuristico ServicoTuristico? @relation(fields: [servicoTuristicoId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}


model PerfilCliente {
  id                 Int                @id @default(autoincrement())
  nome               String
  atracoesTuristicas AtracaoTuristica[]
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @default(now())
}

model Categoria {
  id        Int      @id @default(autoincrement())
  nome      String

  atracoesTuristicas AtracaoTuristica[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Subcategoria {
  id          Int      @id @default(autoincrement())
  nome        String

  atracoesTuristicas AtracaoTuristica[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
model AtracaoTuristica {
  id        Int      @id @default(autoincrement())
  nome      String
  descricao String?
  mapaUrl   String?
  site      String?
  idContato     Int
  idEndereco    Int
  idMunicipio   Int

  categorias Categoria[]
  subcategorias Subcategoria[]

  fotos         GaleriaFoto[]
  horarios      HorarioDeFuncionamento[]
  perfis        PerfilCliente[]

  contato       Contato    @relation(fields: [idContato], references: [id])
  endereco      Endereco   @relation(fields: [idEndereco], references: [id])
  municipio     Municipio  @relation(fields: [idMunicipio], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Endereco {
  id        Int      @id @default(autoincrement())
  rua       String
  numero    String
  bairro    String
  cep       String

  eventos            Evento[]
  atracoesTuristicas AtracaoTuristica[]
  servicosTuristicos ServicoTuristico[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}


model Evento {
  id          Int      @id @default(autoincrement())
  nome        String
  descricao   String?
  data        DateTime
  idMunicipio Int
  idEndereco  Int

  fotos GaleriaFoto[]

  endereco  Endereco  @relation(fields: [idEndereco], references: [id])
  municipio Municipio @relation(fields: [idMunicipio], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Noticia {
  id     Int      @id @default(autoincrement())
  titulo String
  texto  String
  data   DateTime

  fotos GaleriaFoto[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model ServicoTuristico {
  id          Int      @id @default(autoincrement())
  nome        String
  descricao   String?
  site        String?
  idEndereco  Int
  idContato   Int
  idMunicipio Int

  fotos GaleriaFoto[]

  horarios HorarioDeFuncionamento[]

  municipio Municipio @relation(fields: [idMunicipio], references: [id])
  endereco  Endereco  @relation(fields: [idEndereco], references: [id])
  contato   Contato   @relation(fields: [idContato], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Usuario {
  id       Int    @id @default(autoincrement())
  nome     String
  email    String @unique
  senha    String
  admin    Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}