generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum DiaSemana {
  SEGUNDA
  TERCA
  QUARTA
  QUINTA
  SEXTA
  SABADO
  DOMINGO
}

model Contato {
  id        Int     @id @default(autoincrement())
  telefone  String
  celular   String
  email     String
  whatsapp  String
  instagram String

  municipios         Municipio[]
  atracoesTuristicas AtracaoTuristica[]
  servicosTuristicos ServicoTuristico[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Foto {
  id        Int              @id @default(autoincrement())
  url       String

  municipios         Municipio[]
  atracoesTuristicas AtracaoTuristica[]
  eventos            EventoFoto[]
  noticias           NoticiaFoto[]
  servicosTuristicos ServicoTuristico[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Municipio {
  id                  Int                @id @default(autoincrement())
  nome                String
  descricao           String?
  site                String?
  mapaUrl             String?
  idContato           Int

  fotos               Foto[]
  atracoesTuristicas  AtracaoTuristica[]
  eventos             Evento[]

  contato             Contato            @relation(fields: [idContato], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model HorarioDeFuncionamento {
  id                 Int                @id @default(autoincrement())
  dia                DiaSemana
  horario            String

  atracaoTuristicaId Int?
  servicoTuristicoId Int?

  atracaoTuristica   AtracaoTuristica?  @relation(fields: [atracaoTuristicaId], references: [id])
  servicoTuristico   ServicoTuristico?  @relation(fields: [servicoTuristicoId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Categoria {
  id        Int                @id @default(autoincrement())
  nome      String

  atracoesTuristicas AtracaoTuristica[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model PerfilCliente {
  id        Int                @id @default(autoincrement())
  nome      String

  atracoesTuristicas AtracaoTuristica[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Endereco {
  id        Int                @id @default(autoincrement())
  rua       String
  numero    String
  bairro    String
  cidade    String
  estado    String
  cep       String

  atracoesTuristicas AtracaoTuristica[]
  eventos            Evento[]
  servicosTuristicos ServicoTuristico[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model AtracaoTuristica {
  id          Int                @id @default(autoincrement())
  nome        String
  descricao   String?
  mapaUrl     String?
  site        String?
  idContato   Int
  idEndereco  Int
  idMunicipio Int
  idCategoria Int

  fotos       Foto[]
  horarios    HorarioDeFuncionamento[]
  perfis      PerfilCliente[]

  contato     Contato    @relation(fields: [idContato], references: [id])
  endereco    Endereco   @relation(fields: [idEndereco], references: [id])
  categoria   Categoria  @relation(fields: [idCategoria], references: [id])
  municipio   Municipio  @relation(fields: [idMunicipio], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Evento {
  id          Int       @id @default(autoincrement())
  nome        String
  descricao   String?
  data        DateTime
  idMunicipio Int
  idEndereco  Int

  fotos       EventoFoto[]

  endereco    Endereco   @relation(fields: [idEndereco], references: [id])
  municipio   Municipio  @relation(fields: [idMunicipio], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model EventoFoto {
  id        Int    @id @default(autoincrement())
  idEvento  Int
  idFoto    Int
  capa      Boolean

  evento    Evento @relation(fields: [idEvento], references: [id])
  foto      Foto   @relation(fields: [idFoto], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Noticia {
  id        Int    @id @default(autoincrement())
  titulo    String
  texto     String
  data      DateTime

  fotos     NoticiaFoto[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model NoticiaFoto {
  id         Int     @id @default(autoincrement())
  idNoticia  Int
  idFoto     Int
  capa       Boolean

  noticia    Noticia @relation(fields: [idNoticia], references: [id])
  foto       Foto    @relation(fields: [idFoto], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model ServicoTuristico {
  id         Int      @id @default(autoincrement())
  nome       String
  descricao  String?
  site       String?
  idEndereco Int
  idFoto     Int
  idContato  Int

  horarios   HorarioDeFuncionamento[]

  endereco   Endereco @relation(fields: [idEndereco], references: [id])
  foto       Foto     @relation(fields: [idFoto], references: [id])
  contato    Contato  @relation(fields: [idContato], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
