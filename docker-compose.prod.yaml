version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: dockerfile
      target: runner
    container_name: conecta_caparao_app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.conecta-caparao.rule=Host(`incaper.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.conecta-caparao.entrypoints=websecure"
      - "traefik.http.routers.conecta-caparao.tls.certresolver=letsencrypt"
      - "traefik.http.services.conecta-caparao.loadbalancer.server.port=3000"
      - "traefik.docker.network=web"
    networks:
      - web
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql:8.0.29
    container_name: mysql_conecta_caparao
    command: --default-authentication-plugin=mysql_native_password --innodb-buffer-pool-size=256M
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mysql-conecta-caparao.rule=Host(`mysql.${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.mysql-conecta-caparao.entrypoints=websecure"
      - "traefik.http.routers.mysql-conecta-caparao.tls.certresolver=letsencrypt"
      - "traefik.http.services.mysql-conecta-caparao.loadbalancer.server.port=3306"
      - "traefik.docker.network=web"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
      - web
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p$MYSQL_ROOT_PASSWORD",
        ]
      timeout: 20s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

networks:
  web:
    external: true
